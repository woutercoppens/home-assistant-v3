[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "openmotics"
version = "0.0.0"
description = "Homeassistant Custom Component for Openmotics"
license = "AGPLv3"
authors = ["Wouter Coppens <wouter.coppens@gmail.com>"]
readme = "README.md"
repository = "http://github.com/openmotics/homeassistant"
keywords = [
    "aiohttp",
    "asyncio",
    "openmotics",
    "openmotics-api"
]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: AGPLv3"
]

[tool.poetry.dependencies]
python = "^3.9"
# pyhaopenmotics = "0.0.1"

[tool.poetry.dev-dependencies]
black = "^22.1"
blacken-docs = "^1.12.1"
coverage = {version = "^6.3", extras = ["toml"]}
bandit = "^1.7.4"
codecov = "2.1.12"
codespell = "^2.1.0"
darglint = "^1.8.1"
flake8 = "4.0.1"
flake8-bandit = "^3.0.0"
flake8-bugbear = "^22.3.23"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.8.0"
flake8-docstrings = "^1.6.0"
flake8-eradicate = "^1.2.0"
flake8-markdown = "^0.3.0"
flake8-simplify = "^0.18.1"
mypy = "^0.942"
pre-commit = "^2.17.0"
pre-commit-hooks = "^4.1.0"
pytest = "^7.0.1"
pytest-asyncio = "^0.18.3"
pytest-cov = "^2.12.1"
pytest-homeassistant-custom-component = "^0.7.6"
pytest-mock = "^3.7.0"
pylint = "^2.12.2"
pyupgrade = "^2.31.1"
safety = "^1.10.3"
vulture = "^2.3"
yamllint = "^1.26.3"

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "--cov --cov-report term-missing --cov=custom_components tests"

[tool.coverage.report]
show_missing = true
exclude_lines = ["pragma: no cover", "if TYPE_CHECKING:"]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.vulture]
min_confidence = 80
paths = ["custom_components", "tests"]


[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = 3.9

# flake8-mypy expects the two following for sensible formatting
show_column_numbers = true

# show error messages from unrelated files
follow_imports = "silent"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_untyped_calls = true
no_implicit_optional = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

# No incremental mode
cache_dir = "/dev/null"

[[tool.mypy.overrides]]
follow_imports = "skip"
module = "mypy-aiohttp.*"

[tool.pylint.MASTER]
extension-pkg-whitelist = [
  "pydantic"
]
ignore= [
  "tests"
]
load-plugins = [
  "pylint.extensions.bad_builtin",
  "pylint.extensions.code_style",
  "pylint.extensions.docparams",
  "pylint.extensions.docstyle",
  "pylint.extensions.empty_comment",
  "pylint.extensions.overlapping_exceptions",
  "pylint.extensions.typing",
]

[tool.pylint.BASIC]
good-names = [
    "_",
    "ex",
    "fp",
    "i",
    "id",
    "j",
    "k",
    "on",
    "Run",
    "T",
    "wv",
]

[tool.pylint.DESIGN]
max-attributes = 20

[tool.pylint."MESSAGES CONTROL"]
disable = [
  "duplicate-code",
  "format",
  "unsubscriptable-object",
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length=88

[tool.pyright]
include = ["custom_components"]

[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
version_pattern = "custom_components/openmotics/manifest.json:\"version\": \"{version}\""
version_variable = "custom_components/openmotics/const.py:VERSION"
build_command = false
upload_to_repository = false
upload_to_release = false
commit_subject = "chore(release): {version}"
branch = "main"
